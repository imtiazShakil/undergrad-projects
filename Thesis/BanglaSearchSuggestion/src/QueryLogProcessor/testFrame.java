/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package QueryLogProcessor;

import java.awt.Font;
import java.util.ArrayList;
import autocompletion.*;
import banglasearchsuggestion.mainGUI;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ImtiazShakil
 */
public class testFrame extends javax.swing.JFrame {
    QueryLogProcessor shaObj;
    generateTree nafObj;
//    generateTree nafis = new generateTree();
   
    /**
     * Creates new form testFrame
     */
    public testFrame() {
        initComponents();
        Font banglaFont=new Font("SolaimanLipi", Font.PLAIN,16);
        queryTextBox.setFont(banglaFont);
        suggestionListBox.setFont(banglaFont);
        correctedQueryTextBox.setFont(banglaFont);
        
        shaObj = new QueryLogProcessor(5,7);
//        nafObj = new generateTree();
//        nafObj.getDict();

        
        
        
        try {
            shaObj.setQueryLog("QueryLogResource\\Day1.txt");
            shaObj.setQueryLog("QueryLogResource\\Day2.txt");
            //------------------------- Pipilika --------------------------------
            shaObj.setQueryLogWithFrequency("QueryLogResource\\Day3.txt");
            shaObj.setQueryLogWithFrequency("QueryLogResource\\Day4.txt");
            shaObj.setQueryLogWithFrequency("QueryLogResource\\Day5.txt");
            
            
        } catch (IOException ex) {
            System.out.println("QueryLog Preprocessing Failed due to IO Exception");
            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        queryTextBox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        suggestionListBox = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        correctedQueryTextBox = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        queryTextBox.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        queryTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                queryTextBoxKeyTyped(evt);
            }
        });

        suggestionListBox.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        suggestionListBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suggestionListBoxMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(suggestionListBox);

        jLabel1.setText("Query");

        jLabel2.setText("Suggestion");

        jLabel3.setText("Corrected String");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(queryTextBox, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 582, Short.MAX_VALUE)
                    .addComponent(correctedQueryTextBox)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(queryTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(correctedQueryTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void queryTextBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queryTextBoxKeyTyped

        ArrayList<Double>freq=new ArrayList<Double>();
        String str="",tmp="";
        if(evt.getKeyChar()!='\b') str=str+evt.getKeyChar();
        
        if(queryTextBox!=null) str=queryTextBox.getText()+str;
//        System.out.println("Given String-->"+str);
        System.out.println("Text:->"+str + "<-len->"+str.length());
        if(str.length()==0) 
        {
            Object[] arr={""};
            suggestionListBox.setListData(arr);
        }
        else {
//            tmp=nafObj.getSuggestion(str);
//            correctedQueryTextBox.setText(tmp);
            ArrayList<String>ans= shaObj.getSuggestion(str,freq);

            
            for(int i=0;i<freq.size();i++) System.out.println( freq.get(i) );
            Object[] arr = ans.toArray();
            suggestionListBox.setListData(arr);
        }
    }//GEN-LAST:event_queryTextBoxKeyTyped

    private void suggestionListBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suggestionListBoxMouseClicked
       queryTextBox.setText((String) suggestionListBox.getSelectedValue() );
    }//GEN-LAST:event_suggestionListBoxMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(testFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(testFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(testFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(testFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new testFrame().setVisible(true);
            }
        });
        
        
//        ArrayList<String> ans=  obj.getSuggestion("cat");
//        for(int i=0;i<ans.size();i++) System.out.println(ans.get(i));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField correctedQueryTextBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField queryTextBox;
    private javax.swing.JList suggestionListBox;
    // End of variables declaration//GEN-END:variables
}
