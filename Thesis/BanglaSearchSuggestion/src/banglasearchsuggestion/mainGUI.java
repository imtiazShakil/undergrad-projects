/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package banglasearchsuggestion;
import DocumentLogProcessor.*;
import QueryLogProcessor.*;
import autocompletion.*;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author SUST_ATTOPROTTOYEE
 */
public class mainGUI extends javax.swing.JFrame {
    QueryLogProcessor queryProcessor;
    generateTree autoCompleter;
    SuffixAutomataNode docProcessor;
    final int MaxSuggestion =5; 
    /**
     * Creates new form mainGUI
     */
    public mainGUI() {
        initComponents();
        Font banglaFont=new Font("SolaimanLipi", Font.PLAIN,16);
        queryTextBox.setFont(banglaFont);
        suggestionListBox.setFont(banglaFont);
        correctedQueryTextBox.setFont(banglaFont);
        
        queryProcessor = new QueryLogProcessor(5,7);
        autoCompleter = new generateTree();
        docProcessor = new SuffixAutomataNode();
        
/// -------------------------- PRE PROCESS ----------------------------
        autoCompleter.getDict();
        
        try {
            queryProcessor.setQueryLog("QueryLogResource\\Day1.txt");
            queryProcessor.setQueryLog("QueryLogResource\\Day2.txt");
            //------------------------- Pipilika --------------------------------
            queryProcessor.setQueryLogWithFrequency("QueryLogResource\\Day3.txt");
            queryProcessor.setQueryLogWithFrequency("QueryLogResource\\Day4.txt");
            queryProcessor.setQueryLogWithFrequency("QueryLogResource\\Day5.txt");
            
            
        } catch (IOException ex) {
            System.out.println("QueryLog Preprocessing Failed due to IO Exception");
            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            docProcessor.preProcess();
        } catch (IOException ex) {
            System.out.println("Document Preprocessing Failed due to IO Exception");
            Logger.getLogger(mainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
/// -------------------------- PRE PROCESS ----------------------------
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        queryTextBox = new javax.swing.JTextField();
        correctedQueryTextBox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        suggestionListBox = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        nafisJlabel = new javax.swing.JLabel();
        shakilJlabel = new javax.swing.JLabel();
        shahriarJlabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Query Text");

        queryTextBox.setFont(new java.awt.Font("Consolas", 0, 12)); // NOI18N
        queryTextBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                queryTextBoxKeyTyped(evt);
            }
        });

        correctedQueryTextBox.setEditable(false);
        correctedQueryTextBox.setText("শুদ্ধ বাংলা বাক্য ");

        jLabel2.setText("Suggestion");

        suggestionListBox.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        suggestionListBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suggestionListBoxMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(suggestionListBox);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Bangla Search Suggestion");

        nafisJlabel.setText("AutoCorrection Time");

        shakilJlabel.setText("QueryProcessing Time");

        shahriarJlabel.setText("DocProcessing Time");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(queryTextBox)
                            .addComponent(correctedQueryTextBox, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nafisJlabel)
                            .addComponent(shakilJlabel)
                            .addComponent(shahriarJlabel))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nafisJlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shakilJlabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(shahriarJlabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(queryTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(correctedQueryTextBox, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private String filterString(String query)
    {
        int flag=0;
        if(query.length()==0) return "";
        if(query.charAt(query.length()-1)==' ') flag=1;
        
        String anotherTmp="";
        for(int i=0;i<query.length();i++)
        {
            if(query.charAt(i)!=' ' || anotherTmp.length()>0 ) anotherTmp=anotherTmp+query.charAt(i);
        }
        System.out.println("Another String-->"+anotherTmp);
        String tmp[]=anotherTmp.split("\\s+");
        
        String ans="";
        for(int i=0;i<tmp.length;i++)
        {
            if(i!=0) ans=ans+" "+tmp[i];
            else ans=tmp[i];
            System.out.println("Words-->"+tmp[i]);
        }
        System.out.println("Formatted String-->"+ans);
        if(flag==1) ans=ans+" ";
        return ans;
    }
    
    private void queryTextBoxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_queryTextBoxKeyTyped
        
        long qPStartTime,qPEndTime;
        long dPStartTime,dPEndTime;
        long aCStartTime,aCEndTime;
        
        
        ArrayList<Double>freq=new ArrayList<Double>();
        ArrayList<Double>freq2=new ArrayList<Double>();
        String str="",tmp="",str2="";
        if(evt.getKeyChar()!='\b') str=str+evt.getKeyChar();

        if(queryTextBox!=null) str=queryTextBox.getText()+str;
        //        System.out.println("Given String-->"+str);
        System.out.println("Text:->"+str + "<-len->"+str.length());
        str2=filterString(str);
        System.out.println("Received String-->"+str2);
        if(str.length()==0)
        {
            Object[] arr={""};
            suggestionListBox.setListData(arr);
        }
        else {
            
            aCStartTime=System.currentTimeMillis();
                tmp=autoCompleter.getSuggestion(str2);
            aCEndTime=System.currentTimeMillis();
            
            correctedQueryTextBox.setText(tmp);
            
            qPStartTime=System.currentTimeMillis();
                ArrayList<String>ans= queryProcessor.getSuggestion(str2,freq); /// Raw String
//                for(int i=0;i<ans.size();i++) System.out.println("Shakil-->"+ans.get(i));
            qPEndTime=System.currentTimeMillis();
            
            dPStartTime=System.currentTimeMillis();
                freq2.clear();
                ArrayList<String>ans2= docProcessor.getSuggestion(tmp, freq2);
            dPEndTime=System.currentTimeMillis();
            
            ArrayList<String>FinalAns = new ArrayList<String>();
            
            nafisJlabel.setText( Long.toString(aCEndTime-aCStartTime) );
            shakilJlabel.setText( Long.toString(qPEndTime-qPStartTime) );
            shahriarJlabel.setText( Long.toString(dPEndTime-dPStartTime) );
            
            int p,q;
            for( p=0,q=0 ; p<ans.size() && q<ans2.size() && p+q<MaxSuggestion ;  )
            {
                if( freq.get(p)>freq2.get(q) ) {
                    FinalAns.add(ans.get(p));
                    p++;
                    System.out.println("Shakil Selected");
                }
                else {
                    FinalAns.add(ans2.get(q));
                    q++;
                    System.out.println("Shahriar Selected");
                }
            }
            
            while(FinalAns.size()<MaxSuggestion)
            {
                if(p>=ans.size() && q>=ans2.size() ) break;
                if( p<ans.size() ) {FinalAns.add(ans.get(p));p++;System.out.println("Shakil Selected");}
                if( q<ans2.size() ) {FinalAns.add(ans2.get(q));q++;System.out.println("Shahriar Selected");}
            }
            
//            for(int i=0;i<freq.size();i++) System.out.println( freq.get(i) );
            Object[] arr = FinalAns.toArray();
            suggestionListBox.setListData(arr);
        }
    }//GEN-LAST:event_queryTextBoxKeyTyped

    private void suggestionListBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suggestionListBoxMouseClicked
        queryTextBox.setText((String) suggestionListBox.getSelectedValue() );
    }//GEN-LAST:event_suggestionListBoxMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new mainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField correctedQueryTextBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nafisJlabel;
    private javax.swing.JTextField queryTextBox;
    private javax.swing.JLabel shahriarJlabel;
    private javax.swing.JLabel shakilJlabel;
    private javax.swing.JList suggestionListBox;
    // End of variables declaration//GEN-END:variables
}
