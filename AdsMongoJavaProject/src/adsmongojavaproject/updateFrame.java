/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package adsmongojavaproject;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ImtiazShakil
 */
public class updateFrame extends javax.swing.JFrame {

    /**
     * Creates new form updateFrame
     */
    public updateFrame(String tbname, getConnection dbObj) {
        this.dbObj=dbObj;
        tableName=tbname;
        initComponents();
        tableNamelabel.setText("Update Collection :"+tbname);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        findtable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        updateTable = new javax.swing.JTable();
        findTableAddButton = new javax.swing.JButton();
        updateTableAddButton = new javax.swing.JButton();
        confirmUpdateButton = new javax.swing.JButton();
        tableNamelabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Form");
        setAlwaysOnTop(true);

        findtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Key", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        findtable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(findtable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Search Using Key and Value");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Updating Key and Value");

        updateTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Key", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        updateTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(updateTable);

        findTableAddButton.setText("Add Row");
        findTableAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findTableAddButtonActionPerformed(evt);
            }
        });

        updateTableAddButton.setText("Add Row");
        updateTableAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateTableAddButtonActionPerformed(evt);
            }
        });

        confirmUpdateButton.setText("Confirm Update");
        confirmUpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmUpdateButtonActionPerformed(evt);
            }
        });

        tableNamelabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tableNamelabel.setText("jLabel3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 131, Short.MAX_VALUE)
                        .addComponent(findTableAddButton))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(updateTableAddButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tableNamelabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(confirmUpdateButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(findTableAddButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(updateTableAddButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(confirmUpdateButton)
                    .addComponent(tableNamelabel)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void findTableAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findTableAddButtonActionPerformed
        DefaultTableModel dtm= (DefaultTableModel)findtable.getModel();
        dtm.addRow(new Object[] {"",""});
    }//GEN-LAST:event_findTableAddButtonActionPerformed

    private void updateTableAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateTableAddButtonActionPerformed
        DefaultTableModel dtm= (DefaultTableModel) updateTable.getModel();
        dtm.addRow(new Object[] {"",""});
    }//GEN-LAST:event_updateTableAddButtonActionPerformed

    private void confirmUpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmUpdateButtonActionPerformed
        
        DefaultTableModel dtm= (DefaultTableModel) findtable.getModel();
        int rowCount=dtm.getRowCount();
        int colCount=dtm.getColumnCount();
        
        String findStr="{";
        for(int i=0;i<rowCount;i++)
        {
            if(i==0) findStr=findStr+"'"+dtm.getValueAt(i, 0).toString()+"' : '"+dtm.getValueAt(i, 1).toString()+"'";
            else findStr=findStr+",'"+dtm.getValueAt(i, 0).toString()+"' : '"+dtm.getValueAt(i, 1).toString()+"'";

        }  
        findStr=findStr+"}";
        
        System.out.println("Find String\n"+findStr);
        
        dtm=(DefaultTableModel) updateTable.getModel();
        rowCount=dtm.getRowCount();
        colCount=dtm.getColumnCount();
        
        String updateStr="{";
        for(int i=0;i<rowCount;i++)
        {
            if(i==0) updateStr=updateStr+"'"+dtm.getValueAt(i, 0).toString()+"' : '"+dtm.getValueAt(i, 1).toString()+"'";
            else updateStr=updateStr+",'"+dtm.getValueAt(i, 0).toString()+"' : '"+dtm.getValueAt(i, 1).toString()+"'";

        }  
        updateStr=updateStr+"}";
        System.out.println("Update String\n"+updateStr);
        
        try{
            dbObj.doUpdate(findStr, updateStr, tableName);
        }catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Update Failed");
        }
        this.dispose();
        
    }//GEN-LAST:event_confirmUpdateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(final String args[] , final getConnection dbObj) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(updateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(updateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(updateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(updateFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new updateFrame(args[0],dbObj).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton confirmUpdateButton;
    private javax.swing.JButton findTableAddButton;
    private javax.swing.JTable findtable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel tableNamelabel;
    private javax.swing.JTable updateTable;
    private javax.swing.JButton updateTableAddButton;
    // End of variables declaration//GEN-END:variables
    private String tableName;
    private getConnection dbObj;
}
